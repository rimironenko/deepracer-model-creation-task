AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.8

  Sample SAM Template for deepracer-model-creation-task

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  DRFCUploadBucket:
    Type: String
    Description: The S3 bucket where the models trained locally are uploaded

Resources:
  S3ModelImportRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - deepracer.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: deepracer-import-model
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - s3:ListBucket
                  - s3:GetBucketAcl
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetObjectAcl
                  - s3:GetBucketLocation
                Resource:
                  - !Sub 'arn:aws:s3:::${DRFCUploadBucket}'
                  - !Sub 'arn:aws:s3:::${DRFCUploadBucket}/*'

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Environment:
        Variables:
          importRoleArn: !GetAtt S3ModelImportRole.Arn
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket:
              Ref: ImagesBucket     # This must be the name of an S3 bucket declared in the same template file
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: hyperparameters.json
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.8-v1

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
